kind: Namespace
apiVersion: v1
metadata:
  name: external-dns
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: external-dns
  namespace: external-dns
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
spec:
  refreshInterval: "5m"
  secretStoreRef:
    kind: ClusterSecretStore
    name: 1password
  target:
    name: external-dns-secret
    creationPolicy: Owner
  data:
  - secretKey: aws-access-key
    remoteRef:
      key: aws
      property: aws-access-key
  - secretKey: secret-access-key
    remoteRef:
      key: aws
      property: secret-access-key
  dataFrom:
    - extract:
        key: aws
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: external-dns
  namespace: argocd
spec:
  destination:
    namespace: external-dns
    server: https://kubernetes.default.svc
  project: homelab
  source:
    chart: external-dns
    repoURL: https://kubernetes-sigs.github.io/external-dns/
    targetRevision: 1.13.0
    helm:
      values: |
        fullnameOverride: external-dns
        txtOwnerId: "default"
        txtPrefix: txt.
        registry: txt
        replicas: 1
        domainFilters:
          - <path:stringreplacesecret#domain>
        sources:
          - service
          - ingress
          - crd
        loglevel: debug
        logFormat: json
        policy: upsert-only
        interval: 30s
        crd:
          create: true
        provider: aws
        extraArgs:
          - --aws-zone-type=public
        env:
          - name: AWS_ACCESS_KEY_ID
            valueFrom:
              secretKeyRef:
                name: external-dns-secret
                key: aws-access-key
          - name: AWS_SECRET_ACCESS_KEY
            valueFrom:
              secretKeyRef:
                name: external-dns-secret
                key: secret-access-key
  syncPolicy:
    automated:
      allowEmpty: true
      prune: true
      selfHeal: true