apiVersion: v1
kind: Namespace
metadata:
  name: argo-workflows
---
apiVersion: v1
kind: Namespace
metadata:
  name: workflows
# ---
# apiVersion: external-secrets.io/v1beta1
# kind: ExternalSecret
# metadata:
#   name: sso
#   namespace: argocd
#   labels:
#     app.kubernetes.io/part-of: argocd
# spec:
#   refreshInterval: "5m"
#   secretStoreRef:
#     kind: ClusterSecretStore
#     name: 1password
#   target:
#     creationPolicy: Owner
#   data:
#     - secretKey: token
#       remoteRef:
#         key: sso
#         property: argocd
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: workflows-cert
spec:
  commonName: workflows.<path:stringreplacesecret#domain>
  secretName: workflows-cert
  dnsNames:
    - workflows.<path:stringreplacesecret#domain>
  issuerRef:
    name: letsencrypt-production
    kind: ClusterIssuer
---
apiVersion: v1
kind: Service
metadata:
  name: workflows-extname
  annotations:
    external-dns.alpha.kubernetes.io/hostname: workflows.<path:stringreplacesecret#domain>
    external-dns.alpha.kubernetes.io/ttl: "300"
spec:
  type: ExternalName
  externalName: nginx.<path:stringreplacesecret#domain>
  sessionAffinity: None
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: argo-workflows
  namespace: argocd
spec:
  destination:
    namespace: argo-workflows
    server: https://kubernetes.default.svc
  project: homelab
  source:
    chart: argo-workflows
    repoURL: https://argoproj.github.io/argo-helm
    targetRevision: 0.33.1
    helm:
      values: |
        fullnameOverride: argo-workflows
        crds:
          install: true
          keep: true
        workflow:
          rbac:
            create: true
          serviceAccount:
            create: true
        controller:
          workflowNamespaces:
            - default
            - workflows
        server:
          enabled: true
          ingress:
            enabled: true
  syncPolicy:
    automated:
      allowEmpty: true
      prune: true
      selfHeal: true
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: argocd
  namespace: argocd
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-production
spec:
  ingressClassName: nginx
  tls:
  - hosts:
    - workflows.hacksm.net
    secretName: workflows-cert
  rules:
  - host: workflows.hacksm.net
    http:
      paths:
      - backend:
          service:
            name: argo-workflows-server
            port:
              number: 80
        path: /
        pathType: Prefix