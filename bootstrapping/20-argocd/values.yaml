configs:
  cm:
    resource.compareoptions: |
      ignoreAggregatedRoles: true
    url: "http://argocd.hacksm.net"
    dex.config: |
      connectors:
        - type: oidc
          name: authentik
          id: authentik
          config:
            issuer: http://authentik.hacksm.net/application/o/argocd/
            clientID: argocd
            clientSecret: $sso:token
            insecureEnableGroups: true
            scopes:
              - openid
              - profile
              - email
  rbac:
    policy.default: role:readonly
    policy.csv: |
      g, ArgoCD Admin, role:admin
  params:
    server.insecure: "true"

repoServer:
  # Until KSOPS setup logic is re-written, this can only run
  # on amd64 nodes.
  nodeSelector:
    kubernetes.io/arch: amd64

  deploymentAnnotations:
    reloader.stakater.com/auto: "true"

  rbac:
    - apiGroups: [""]
      resources: ["secrets"]
      verbs: ["get", "watch", "list"]

  # Env
  env:
  - name: XDG_CONFIG_HOME
    value: '/.config'
  # Add the KSOPS plugin
  initContainers:
  - name: install-custom-tools
      image: docker.io/library/alpine:latest
      command: ["ash", "-c"]
      args:
      - |
        export ARCH=$(uname -m | awk '{print ($1=="x86_64" ? "x86_64" : ($1=="aarch64" ? "arm64" : "unknown"))}')
        wget -qO- https://github.com/viaduct-ai/kustomize-sops/releases/download/v4.2.1/ksops_4.2.1_Linux_${ARCH}.tar.gz | tar -xzf -
        export ARCH=$(uname -m | awk '{print ($1=="x86_64" ? "amd64" : ($1=="aarch64" ? "arm64" : "unknown"))}')
        wget -qO- https://github.com/kubernetes-sigs/kustomize/releases/download/kustomize%2Fv5.1.1/kustomize_v5.1.1_linux_${ARCH}.tar.gz | tar -xzf -
        mv kustomize ksops /custom-tools/
        chown -R 999:999 /custom-tools/*
      volumeMounts:
      - mountPath: /custom-tools
        name: custom-tools
  # Volume Work
  volumeMounts:
  - mountPath: /usr/local/bin/kustomize
    name: custom-tools
    subPath: kustomize
  - mountPath: /.config/kustomize/plugin/viaduct.ai/v1/ksops/ksops
    name: custom-tools
    subPath: ksops
  - mountPath: "/home/argocd/.aws/credentials"
    name: aws-creds
    readOnly: true
    subPath: credentials
  - mountPath: /custom-tools
    name: custom-tools
  volumes:
  - name: custom-tools
    emptyDir: {}
  - name: aws-creds
    secret:
      secretName: aws-creds

server:
  config:
    kustomize.buildOptions: "--enable-alpha-plugins --enable-exec"
    application.instanceLabelKey: argocd.argoproj.io/instance
    url: https://argocd.hacksm.net
    # Why in the FUCK is this here? See below!
    # https://argo-cd.readthedocs.io/en/release-2.4/faq/#why-is-my-application-still-outofsync-immediately-after-a-successful-sync
    # https://github.com/argoproj/argo-cd/blob/master/docs/operator-manual/argocd-cm.yaml#L235
    # Thanks a ton to @onedr0p, @toboshii, and @xUnholy for the help in figuring this out!
  ingress:
    enabled: true
    ingressClassName: nginx
    annotations: 
      cert-manager.io/cluster-issuer: letsencrypt-production
      kubernetes.io/ingress.class: nginx
      kubernetes.io/tls-acme: 'true'
    tls:
    - secretName: argocd-cert
      hosts:
      - argocd.hacksm.net
    rules:
    - host: argocd.hacksm.net
      http:
        paths:
        - path: /
          pathType: Prefix
          backend:
            service:
              name: argocd-server
              port:
                name: 80