apiVersion: v1
kind: Namespace
metadata:
  name: argo-events
# ---
# apiVersion: external-secrets.io/v1beta1
# kind: ExternalSecret
# metadata:
#   name: sso
#   namespace: argo-workflows
#   labels:
#     app.kubernetes.io/part-of: argocd
# spec:
#   refreshInterval: "5m"
#   secretStoreRef:
#     kind: ClusterSecretStore
#     name: 1password
#   target:
#     creationPolicy: Owner
#   data:
#     - secretKey: token
#       remoteRef:
#         key: sso
#         property: workflows
# ---
# apiVersion: cert-manager.io/v1
# kind: Certificate
# metadata:
#   name: workflows-cert
# spec:
#   commonName: workflows.<path:stringreplacesecret#domain>
#   secretName: workflows-cert
#   dnsNames:
#     - workflows.<path:stringreplacesecret#domain>
#   issuerRef:
#     name: letsencrypt-production
#     kind: ClusterIssuer
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: argo-events
  namespace: argocd
spec:
  destination:
    namespace: argo-events
    server: https://kubernetes.default.svc
  project: homelab
  source:
    chart: argo-events
    repoURL: https://argoproj.github.io/argo-helm
    targetRevision: v1.8.1
    helm:
      values: |
        crds:
          install: false
        global:
          image: 
            repository: quay.io/argoproj/argo-events
            tag: ""
            imagePullPolicy: IfNotPresent
        configs:
        controller:
          name: events-controller
          rbac:
            enabled: true
            namespaced: false # when set to true restricts controller to operate in a single namespace, instead of cluster-wide scope.
            managedNamespace: "" # additional namespace to be monitored by the controller
          replicas: 1
        webhook:
          enabled: false
          name: events-webhook

  syncPolicy:
    automated:
      allowEmpty: true
      prune: true
      selfHeal: true