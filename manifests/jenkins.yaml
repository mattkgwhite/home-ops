apiVersion: v1
kind: Namespace
metadata:
  labels:
    name: jenkins
  name: jenkins
# ---
# apiVersion: external-secrets.io/v1beta1
# kind: ExternalSecret
# metadata:
#   name: sso
#   namespace: argocd
#   labels:
#     app.kubernetes.io/part-of: argocd
# spec:
#   refreshInterval: "5m"
#   secretStoreRef:
#     kind: ClusterSecretStore
#     name: 1password
#   target:
#     creationPolicy: Owner
#   data:
#     - secretKey: token
#       remoteRef:
#         key: sso
#         property: argocd
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: jenkins
  namespace: jenkins
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-production
    kubernetes.io/ingress.class: nginx
    kubernetes.io/tls-acme: 'true'
spec:
  ingressClassName: nginx
  tls:
  - hosts:
    - jenkins.<path:stringreplacesecret#domain>
    secretName: jenkins-cert
  rules:
  - host: jenkins.<path:stringreplacesecret#domain>
    http:
      paths:
      - backend:
          service:
            name: argocd-server
            port:
              number: 80
        path: /
        pathType: Prefix
---
apiVersion: v1
kind: Service
metadata:
  name: jenkins-extname
  namespace: jenkins
  annotations:
    external-dns.alpha.kubernetes.io/hostname: jenkins.<path:stringreplacesecret#domain>
    external-dns.alpha.kubernetes.io/ttl: "300"
spec:
  type: ExternalName
  externalName: nginx.<path:stringreplacesecret#domain>
  sessionAffinity: None
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: jenkins
  namespace: argocd
spec:
  destination:
    namespace: jenkins
    server: https://kubernetes.default.svc
  project: homelab
  source:
    chart: jenkins
    repoURL: https://charts.jenkins.io
    targetRevision: 4.6.4
    helm:
      values: |
        fullnameOverride: jenkins
        image:
          repository: jenkins-container-image
          tag: latest
          pullPolicy: IfNotPresent
        podSecurityContext:
          fsGroup: 1000
          runAsUser: 1000
          runAsGroup: 1000
        termination:
          gracePeriodSeconds: 60
        resources:
          limits:
            cpu: "2"
            memory: "4Gi"
          requests:
            cpu: "1"
            memory: "2Gi"
        initContainers:
          init:
            image: busybox-image
              command: ["sh", "-c", "ls -halt /var/jenkins_home && chown -R 1000:1000 /var/jenkins_home"]
              securityContext:
                runAsUser: 0
                allowPrivilegeEscalation: true
              volumeMounts:
              - name: jenkins-home
                mountPath: /var/jenkins_home
                subPath: jenkins-volume
        service:
          main:
            enabled: true
            type: ClusterIP
            ports:
              http:
                enabled: false
              web:
                enabled: true
                port: 8080
                protocol: TCP
              jnlp-agents:
                enabled: true
                port: 50000
                protocol: TCP
        ingress:
          enabled: false
        persistence:
          jenkins-home:
            enabled:
            storageClass: hcloud-volume
            accessMode: ReadWriteOnce
            mountPath: /var/jenkins_home
            size: 20Gi
  syncPolicy:
    automated:
      allowEmpty: true
      prune: true
      selfHeal: true