---
kind: Namespace
apiVersion: v1
metadata:
  name: vikunja
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: vikunja-files
  namespace: vikunja
  labels:
    app.kubernetes.io/instance: vikunja
    app.kubernetes.io/name: vikunja
spec:
  accessModes:
    - "ReadWriteOnce"
  resources:
    requests:
      storage: "2Gi"
  storageClassName: "hetzner-storagebox"
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: vikunja-db
  namespace: vikunja
  labels:
    app.kubernetes.io/instance: vikunja
    app.kubernetes.io/name: vikunja
spec:
  accessModes:
    - "ReadWriteOnce"
  resources:
    requests:
      storage: "2Gi"
  storageClassName: "hetzner-storagebox"
---
apiVersion: v1
kind: Service
metadata:
  name: vikunja
  namespace: vikunja
  labels:
    app.kubernetes.io/instance: vikunja
    app.kubernetes.io/name: vikunja
    app.kubernetes.io/service: vikunja
spec:
  type: ClusterIP
  ports:
    - port: 3456
      targetPort: 3456
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/component: vikunja
    app.kubernetes.io/instance: vikunja
    app.kubernetes.io/name: vikunja
---
apiVersion: v1
kind: Service
metadata:
  name: vikunja
  namespace: vikunja
  labels:
    app.kubernetes.io/instance: vikunja
    app.kubernetes.io/name: vikunja
    app.kubernetes.io/service: vikunja
spec:
  type: ClusterIP
  ports:
    - port: 3306
      targetPort: 3306
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/component: vikunja
    app.kubernetes.io/instance: vikunja
    app.kubernetes.io/name: vikunja
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: vikunja
  namespace: vikunja
  labels:
    app.kubernetes.io/component: vikunja
    app.kubernetes.io/instance: vikunja
    app.kubernetes.io/name: vikunja
spec:
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/component: vikunja
      app.kubernetes.io/name: vikunja
      app.kubernetes.io/instance: vikunja
  template:
    metadata:
      labels:
        app.kubernetes.io/component: vikunja
        app.kubernetes.io/instance: vikunja
        app.kubernetes.io/name: vikunja
    spec:
      containers:
      # Vikunja Container
      - image: vikunja/vikunja
        name: vikunja
        env:
        - name: VIKUNJA_SERVICE_PUBLICURL
          value: "https://tasks.nahops.co.uk"
        - name: VIKUNJA_DATABASE_HOST
          value: "localhost"  # Use localhost since both containers are in the same Pod
        - name: VIKUNJA_DATABASE_PASSWORD
          value: "changeme"
        - name: VIKUNJA_DATABASE_TYPE
          value: "mysql"
        - name: VIKUNJA_DATABASE_USER
          value: "vikunja"
        - name: VIKUNJA_DATABASE_DATABASE
          value: "vikunja"
        - name: VIKUNJA_SERVICE_JWTSECRET
          value: "a-super-secure-random-secret"
        - name: VIKUNJA_CORS_ENABLE
          value: "true"
        volumeMounts:
        - name: files
          mountPath: /app/vikunja/files
        ports:
        - containerPort: 3456
        resources:
          limits:
            cpu: "1"
            memory: 384Mi
            ephemeral-storage: 64Mi
          requests:
            cpu: 10m
            memory: 384Mi
      - name: mariadb
        image: mariadb:10
        env:
        - name: MYSQL_ROOT_PASSWORD
          value: "supersecret"
        - name: MYSQL_USER
          value: "vikunja"
        - name: MYSQL_PASSWORD
          value: "changeme"
        - name: MYSQL_DATABASE
          value: "vikunja"
        ports:
        - containerPort: 3306
        volumeMounts:
        - name: db-data
          mountPath: /var/lib/mysql
        resources:
          limits:
            cpu: 100m
            memory: 128Mi
            ephemeral-storage: 64Mi
          requests:
            cpu: 10m
            memory: 64Mi
            ephemeral-storage: 16Mi
      volumes:
        # - name: config
        #   secret:
        #     secretName: sso
        - name: files
          persistentVolumeClaim:
            claimName: vikunja-files
        - name: db-data
          persistentVolumeClaim:
            claimName: vikunja-db
---
apiVersion: gateway.networking.k8s.io/v1
kind: HTTPRoute
metadata:
  name: vikunja
  namespace: vikunja
spec:
  parentRefs:
    - name: internal
      namespace: gateway
      sectionName: https
    - name: external
      namespace: gateway
      sectionName: https
  hostnames:
    - "tasks.nahops.co.uk"
  rules:
    - matches:
        - path:
            type: PathPrefix
            value: /
      backendRefs:
        - name: vikunja
          port: 3456
# ---
# apiVersion: externaldns.k8s.io/v1alpha1
# kind: DNSEndpoint
# metadata:
#   name: vikunja-public
#   namespace: vikunja
#   annotations:
#     external-dns.custom/type: public
# spec:
#   endpoints:
#     - dnsName: tasks.nahops.co.uk
#       recordType: CNAME
#       targets:
#         - ingress.nahops.co.uk
#       providerSpecific:
#         - name: external-dns.alpha.kubernetes.io/cloudflare-proxied
#           value: "true"
---
apiVersion: externaldns.k8s.io/v1alpha1
kind: DNSEndpoint
metadata:
  name: vikunja-private
  namespace: vikunja
  annotations:
    external-dns.custom/type: private
spec:
  endpoints:
    - dnsName: tasks.nahops.co.uk
      recordType: CNAME
      targets:
        - intgw.nahops.co.uk