kind: Namespace
apiVersion: v1
metadata:
  name: ingress-nginx-external
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: ingress-nginx-external
  namespace: argocd
spec:
  destination:
    namespace: ingress-nginx-external
    server: https://kubernetes.default.svc
  project: homelab
  source:
    chart: ingress-nginx
    repoURL: https://kubernetes.github.io/ingress-nginx
    targetRevision: 4.7.1
    helm:
      values: |
            controller:
              admissionWebhooks:
                enabled: false
              replicaCount: 1
              config:
                custom-http-errors: 404,401,403,500,503
                hsts-max-age: "31449600"
                force-ssl-redirect: "true"
              use-forwarded-headers: "true"
              service:
                externalTrafficPolicy: Local
              metrics:
                enabled: false
                serviceMonitor:
                  enabled: true
                  namespace: kube-system
                prometheusRule:
                  enabled: false
              # extraArgs:
              #   default-ssl-certificate: "cert-manager/acme-crt-secret"
              resources:
                requests:
                  memory: 500Mi
                  cpu: 25m
                limits:
                  memory: 600Mi
            defaultBackend:
              enabled: true
              image:
                repository: billimek/custom-error-pages
                tag: 0.4.4
              resources:
                requests:
                  memory: 250Mi
                  cpu: 25m
                limits:
                  memory: 350Mi
      # plugin:
      #   name: kustomize-inline
      #   env:
      #     - name: KUSTOMIZATION_YAML
      #       value: |
      #         apiVersion: v1
      #         kind: Service
      #         metadata:
      #           name: ingress-nginx-controller
      #           namespace: kube-system
      #         spec:
      #           loadBalancerClass: metallb
  syncPolicy:
    automated:
      allowEmpty: true
      prune: true
      selfHeal: true