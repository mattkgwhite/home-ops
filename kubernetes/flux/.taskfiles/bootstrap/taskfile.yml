---
# yaml-language-server: $schema=https://taskfile.dev/schema.json
version: "3"

vars:
  controller:
    sh: talosctl config info --output json | jq --exit-status --raw-output '.endpoints[]' | shuf -n 1

tasks:
  default:
    desc: Bootstraps cluster dependencies
    prompt: Bootstrap cluster required dependencies?
    cmds:
      - task: kubeconfig
      - task: resources
      - task: helmfile
    preconditions:
      - test -f {{.ROOT_DIR}}/talosconfig
      - talosctl config info
      - op user get --me

  kubeconfig:
    desc: Fetches a new kubeconfig from a controller
    cmd: talosctl kubeconfig --nodes {{.controller}} --force --force-context-name main "$(basename "${KUBECONFIG}")"
    preconditions:
      - test -f {{.ROOT_DIR}}/talosconfig
      - talosctl config info

  resources:
    desc: Creates required secrets for cluster
    cmd: minijinja-cli "{{.ROOT_DIR}}/bootstrap/secrets.yaml.tpl" | op.exe inject | kubectl apply -f -
    preconditions:
      - test -f {{.ROOT_DIR}}/kubeconfig
      - test -f {{.ROOT_DIR}}/bootstrap/secrets.yaml.tpl
      - op user get --me | read -r _ && echo "true" || echo "false"

  helmfile:
    desc: Applies bootstrap helmfile
    cmd: helmfile --file "{{.ROOT_DIR}}/bootstrap/helmfile.yaml"
    preconditions:
      - test -f {{.ROOT_DIR}}/bootstrap/helmfile.yaml
      - helm diff version

  talos:
    desc: Bootstrap the Talos cluster
    dir: '{{.TALOS_DIR}}'
    cmds:
      - '[ -f talsecret.sops.yaml ] || talhelper gensecret | sops --filename-override talos/talsecret.sops.yaml --encrypt /dev/stdin > talsecret.sops.yaml'
      - talhelper genconfig
      - talhelper gencommand apply --extra-flags="--insecure" | bash
      - until talhelper gencommand bootstrap | bash; do sleep 10; done
      - until talhelper gencommand kubeconfig --extra-flags="{{.ROOT_DIR}} --force" | bash; do sleep 10; done
    preconditions:
      - test -f {{.ROOT_DIR}}/.sops.yaml
      - test -f {{.SOPS_AGE_KEY_FILE}}
      - test -f {{.TALOS_DIR}}/talconfig.yaml
      - which talhelper talosctl sops

  apps:
    desc: Bootstrap apps into the Talos cluster
    cmd: bash {{.SCRIPTS_DIR}}/bootstrap-apps.sh
    preconditions:
      - msg: Unsupported bash version, run `brew install bash` to upgrade
        sh: '{{if eq OS "darwin"}}test -f /opt/homebrew/bin/bash || test -f /usr/local/bin/bash{{end}}'
      - test -f {{.KUBECONFIG}}
      - test -f {{.ROOT_DIR}}/.sops.yaml
      - test -f {{.SCRIPTS_DIR}}/bootstrap-apps.sh
      - test -f {{.SOPS_AGE_KEY_FILE}}
